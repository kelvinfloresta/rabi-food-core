services:
  app:
    container_name: app-test
    image: rabi-food-test
    build:
      context: ../app
      dockerfile: Dockerfile.test
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file:
      - ../.env.test
    command: >
      sh -c "
        mockery --all --output fixtures/mocks &&
        go clean -testcache &&
        gotestsum --format testname -- ./... -p 1 -v
      "
    volumes:
      - ../app:/app
      - /go/pkg/mod
      - /go/bin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - test

  postgres:
    image: postgres:17.6-bookworm
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${TEST_DATABASE_USER}
      POSTGRES_PASSWORD: ${TEST_DATABASE_PASSWORD}
      POSTGRES_DB: ${TEST_DATABASE_NAME}
      POSTGRES_PORT: ${TEST_DATABASE_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - test

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres
    networks:
      - test

volumes:
  pgdata:

networks:
  test:
    driver: bridge
